#+STARTUP: content indent

* Switch monitor for Floodlight

This script runs a simple monitor that checks the transfer rates of each link of every OF switch in a Floodlight controlled SDN.

** What does it look like?

Pretty simple ;)

The script outputs a table with the Tx and Rx values of each port of every switch registered with Floodlight. Something like this:
 
#+BEGIN_SRC

|                  Switch | Port | Tx (Mbps) | Rx (Mbps) |
|-------------------------+------+-----------+-----------|
| 00:00:00:00:00:00:00:01 |    1 | NA        | NA        |
| 00:00:00:00:00:00:00:01 |    2 | NA        | NA        |
| 00:00:00:00:00:00:00:01 |    3 | NA        | NA        |
| 00:00:00:00:00:00:00:02 |    1 | NA        | NA        |
| 00:00:00:00:00:00:00:02 |    2 | NA        | NA        |
| 00:00:00:00:00:00:00:02 |    3 | NA        | NA        |
| 00:00:00:00:00:00:00:02 |    4 | NA        | NA        |
| 00:00:00:00:00:00:00:03 |    1 | NA        | NA        |
| 00:00:00:00:00:00:00:03 |    2 | NA        | NA        |
| 00:00:00:00:00:00:00:03 |    3 | NA        | NA        |
| 00:00:00:00:00:00:00:03 |    4 | NA        | NA        |
| 00:00:00:00:00:00:00:04 |    1 | NA        | NA        |
| 00:00:00:00:00:00:00:04 |    2 | NA        | NA        |
| 00:00:00:00:00:00:00:04 |    3 | NA        | NA        |
| 00:00:00:00:00:00:00:05 |    1 | NA        | NA        |
| 00:00:00:00:00:00:00:05 |    2 | NA        | NA        |

#+END_SRC

** Usage

*** Dependencies

 Install the dependencies with

 #+BEGIN_SRC sh
 pip install -r requirements.txt
 #+END_SRC

*** Execution

 The script relies on the =FLOODLIGHT_BASEURL= environment variable to find the controller API. Assuming the controller is running on the same host as the scipt, export the base URL as such

 #+BEGIN_SRC sh
 export FLOODLIGHT_BASEURL='http://localhost:8080'
 #+END_SRC

 ... then start the monitor

 #+BEGIN_SRC sh
 python main.py
 #+END_SRC
